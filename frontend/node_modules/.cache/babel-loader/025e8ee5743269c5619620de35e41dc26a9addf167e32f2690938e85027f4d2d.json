{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { courseActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { courseAddRequestFail } from '../state/action-creators';\nconst addProject = async (name, assignee_id) => {\n  console.log(name, assignee_id);\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const status = \"Inactive\";\n    const {\n      data\n    } = await axios.post('/project/add', {\n      name,\n      assignee_id,\n      status\n    }, config);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\nfunction* workaddProjectSaga(action) {\n  //yield takeEvery\n\n  console.log(\"work add user saga working\");\n  try {\n    //action.payload.email\n    const result = yield call(addProject, action.payload.name, action.payload.assignee_id);\n    console.log(result);\n\n    // way of calling action from work saga\n    // const dispacth = useDispatch()\n\n    yield put({\n      type: courseActionType.ADD_PROJECT_SUCCESS\n    });\n  } catch (err) {\n    yield put(courseAddRequestFail);\n  }\n}\nfunction* watchaddProjectSaga() {\n  console.log(\"watch add user saga\");\n  yield takeEvery(courseActionType.ADD_PROJECT_REQUEST, workaddProjectSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const AddprojectSaga = watchaddProjectSaga;","map":{"version":3,"names":["takeEvery","call","put","courseActionType","axios","courseAddRequestFail","addProject","name","assignee_id","console","log","config","headers","status","data","post","err","workaddProjectSaga","action","result","payload","type","ADD_PROJECT_SUCCESS","watchaddProjectSaga","ADD_PROJECT_REQUEST","AddprojectSaga"],"sources":["/home/sameersuman/KB/new/projectMnagementSystem/frontend/src/sagas/addProjectSaga.ts"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { courseActionType, userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { courseAddRequestFail, courseAddRequestSuccess, userLoginRequestAction, userSignupFailAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\nimport { useDispatch } from 'react-redux';\n\n\nconst addProject = async (name : string,assignee_id: string) => {\n\n    console.log(name,assignee_id)\n\n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n\n        const status : string = \"Inactive\"\n        const { data } = await axios.post('/project/add',{name,assignee_id,status},config)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workaddProjectSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"work add user saga working\")\n\n    try {\n\n        //action.payload.email\n        const result = yield call(addProject,action.payload.name,action.payload.assignee_id);\n\n        console.log(result)\n\n        // way of calling action from work saga\n       // const dispacth = useDispatch()\n\n        yield put({type : courseActionType.ADD_PROJECT_SUCCESS})\n\n    \n\n    }\n    catch(err) {\n\n        yield put(courseAddRequestFail)\n    }\n}\n function* watchaddProjectSaga() {\n\n    console.log(\"watch add user saga\")\n    yield takeEvery(courseActionType.ADD_PROJECT_REQUEST,workaddProjectSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const AddprojectSaga = watchaddProjectSaga;"],"mappings":"AAUA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAASC,gBAAgB,QAAwB,uBAAuB;;AAExE;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,oBAAoB,QAA+E,0BAA0B;AAQtI,MAAMC,UAAU,GAAG,MAAAA,CAAOC,IAAa,EAACC,WAAmB,KAAK;EAE5DC,OAAO,CAACC,GAAG,CAACH,IAAI,EAACC,WAAW,CAAC;EAE7B,IAAI;IAEA,MAAMG,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAMC,MAAe,GAAG,UAAU;IAClC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,cAAc,EAAC;MAACR,IAAI;MAACC,WAAW;MAACK;IAAM,CAAC,EAACF,MAAM,CAAC;IAElF,OAAOG,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAUC,kBAAkBA,CAACC,MAAc,EAAO;EAE9C;;EAEAT,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAEzC,IAAI;IAEA;IACA,MAAMS,MAAM,GAAG,MAAMlB,IAAI,CAACK,UAAU,EAACY,MAAM,CAACE,OAAO,CAACb,IAAI,EAACW,MAAM,CAACE,OAAO,CAACZ,WAAW,CAAC;IAEpFC,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;;IAEnB;IACD;;IAEC,MAAMjB,GAAG,CAAC;MAACmB,IAAI,EAAGlB,gBAAgB,CAACmB;IAAmB,CAAC,CAAC;EAI5D,CAAC,CACD,OAAMN,GAAG,EAAE;IAEP,MAAMd,GAAG,CAACG,oBAAoB,CAAC;EACnC;AACJ;AACC,UAAUkB,mBAAmBA,CAAA,EAAG;EAE7Bd,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,MAAMV,SAAS,CAACG,gBAAgB,CAACqB,mBAAmB,EAACP,kBAAkB,CAAC;;EAExE;AAEJ;;AAEA,OAAO,MAAMQ,cAAc,GAAGF,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}