{"ast":null,"code":"import _slicedToArray from\"/home/aniketkumar/KB/projectMnagementSystem/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{Alert}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Alertshow(arrs){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isHide=_useState2[0],setIsHide=_useState2[1];//console.log(arrs[0],arrs[1],arrs,typeof(arrs))\nvar str1=arrs.arrs.msgtype;var str2=arrs.arrs.msg;//const str2 = arrs[1]\n//setTimeout(() => setIsHide(false), 5000);\n//   setTimeout(() => setIsHide(true),10000)\nconsole.log(\"alertshow\",arrs.arrs.msgtype,arrs.arrs.msg,typeof arrs,arrs);useEffect(function(){var timeoutId=setTimeout(function(){setIsHide(true);},3000);return function(){clearTimeout(timeoutId);};// return function will only run when the component unmount\n},[]);// using empty square bracket it means after the component muount it will run only once\n// const types = variants\nreturn/*#__PURE__*/_jsx(_Fragment,{children:!isHide?/*#__PURE__*/_jsx(Alert,{variant:str1,style:{width:\"42rem\",marginTop:\"100px\"},children:/*#__PURE__*/_jsx(Alert.Heading,{children:str2})}):/*#__PURE__*/_jsx(\"div\",{})});}","map":{"version":3,"names":["useState","useEffect","Alert","jsx","_jsx","Fragment","_Fragment","Alertshow","arrs","_useState","_useState2","_slicedToArray","isHide","setIsHide","str1","msgtype","str2","msg","console","log","timeoutId","setTimeout","clearTimeout","children","variant","style","width","marginTop","Heading"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/component/AlertShow.tsx"],"sourcesContent":["\n\n\nimport { useState, useEffect } from \"react\";\n\nimport { Alert } from \"react-bootstrap\";\nimport { isVariableDeclarationList } from \"typescript\";\n\n\nexport function Alertshow (arrs : any)   {\n  const [isHide, setIsHide] = useState(false);\n\n  //console.log(arrs[0],arrs[1],arrs,typeof(arrs))\n\n  const str1  = arrs.arrs.msgtype\n\n  const str2 = arrs.arrs.msg\n\n  //const str2 = arrs[1]\n\n  //setTimeout(() => setIsHide(false), 5000);\n\n//   setTimeout(() => setIsHide(true),10000)\n\nconsole.log(\"alertshow\",arrs.arrs.msgtype,arrs.arrs.msg,typeof(arrs),arrs)\n\nuseEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsHide(true);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeoutId);\n    }; // return function will only run when the component unmount\n  }, []); // using empty square bracket it means after the component muount it will run only once\n\n\n // const types = variants\n  return (\n    <>\n    { !isHide ? <Alert variant = {str1} style={{ width: \"42rem\", marginTop: \"100px\" }}>\n      <Alert.Heading>\n        {str2}\n      </Alert.Heading>\n    </Alert> : <div></div>}\n\n    </>\n  );\n}\n\n"],"mappings":"0IAGA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,OAASC,KAAK,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAIxC,MAAO,SAAS,CAAAC,SAASA,CAAEC,IAAU,CAAI,CACvC,IAAAC,SAAA,CAA4BT,QAAQ,CAAC,KAAK,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAApCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IAExB;AAEA,GAAM,CAAAI,IAAI,CAAIN,IAAI,CAACA,IAAI,CAACO,OAAO,CAE/B,GAAM,CAAAC,IAAI,CAAGR,IAAI,CAACA,IAAI,CAACS,GAAG,CAE1B;AAEA;AAEF;AAEAC,OAAO,CAACC,GAAG,CAAC,WAAW,CAACX,IAAI,CAACA,IAAI,CAACO,OAAO,CAACP,IAAI,CAACA,IAAI,CAACS,GAAG,CAAC,MAAO,CAAAT,IAAK,CAACA,IAAI,CAAC,CAE1EP,SAAS,CAAC,UAAM,CACZ,GAAM,CAAAmB,SAAS,CAAGC,UAAU,CAAC,UAAM,CACjCR,SAAS,CAAC,IAAI,CAAC,CACjB,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,WAAM,CACXS,YAAY,CAACF,SAAS,CAAC,CACzB,CAAC,CAAE;AACL,CAAC,CAAE,EAAE,CAAC,CAAE;AAGT;AACC,mBACEhB,IAAA,CAAAE,SAAA,EAAAiB,QAAA,CACE,CAACX,MAAM,cAAGR,IAAA,CAACF,KAAK,EAACsB,OAAO,CAAIV,IAAK,CAACW,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAAJ,QAAA,cAChFnB,IAAA,CAACF,KAAK,CAAC0B,OAAO,EAAAL,QAAA,CACXP,IAAI,EACS,EACV,cAAGZ,IAAA,UAAW,EAEnB,CAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}