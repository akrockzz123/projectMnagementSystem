{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { userActionType } from '../state/action-types';\nimport axios from 'axios';\nconst fetchUserinfo = async id => {\n  try {\n    const {\n      data\n    } = await axios.get(`/user/${id}`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\nfunction* workuserinfoSaga(action) {\n  console.log(\"worksaga working\");\n  try {\n    console.log(action.payload, action.payload.id);\n    const result = yield call(fetchUserinfo, action.payload.id);\n    yield put({\n      type: userActionType.USER_INFO_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: userActionType.USER_INFO_FAIL\n    });\n  }\n}\nfunction* watchuserinfoSaga() {\n  yield takeEvery(userActionType.USER_INFO_REQUEST, workuserinfoSaga);\n}\nexport const userinfoSagas = watchuserinfoSaga;","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","fetchUserinfo","id","data","get","err","workuserinfoSaga","action","console","log","payload","result","type","USER_INFO_SUCCESS","USER_INFO_FAIL","watchuserinfoSaga","USER_INFO_REQUEST","userinfoSagas"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/getUserSaga.ts"],"sourcesContent":["\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n\nimport { userActionType } from '../state/action-types';\n\nimport axios from 'axios';\n\nimport { Action } from '../state/action';\n\nimport { userinfoSuccess, userLoginRequestAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst fetchUserinfo  = async (id : string) => {\n\n    try {\n        \n\n        const { data } = await axios.get(`/user/${id}`)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n\nfunction* workuserinfoSaga(action: Action) : any{\n\n    console.log(\"worksaga working\")\n\n    try {\n\n        console.log(action.payload,action.payload.id)\n\n\n        const result = yield call(fetchUserinfo,action.payload.id);\n\n        \n        yield put({type : userActionType.USER_INFO_SUCCESS, payload : result})\n    \n    }\n    catch(err) {\n\n        yield put({type : userActionType.USER_INFO_FAIL})\n    }\n}\n function* watchuserinfoSaga() {\n\n    yield takeEvery(userActionType.USER_INFO_REQUEST,workuserinfoSaga);\n\n}\n\nexport const userinfoSagas = watchuserinfoSaga;\n"],"mappings":"AAKA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;AAG7E,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,OAAOC,KAAK,MAAM,OAAO;AAWzB,MAAMC,aAAa,GAAI,MAAOC,EAAW,IAAK;EAE1C,IAAI;IAGA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,SAAQF,EAAG,EAAC,CAAC;IAE/C,OAAOC,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AAED,UAAUC,gBAAgBA,CAACC,MAAc,EAAO;EAE5CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAE/B,IAAI;IAEAD,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,EAACH,MAAM,CAACG,OAAO,CAACR,EAAE,CAAC;IAG7C,MAAMS,MAAM,GAAG,MAAMd,IAAI,CAACI,aAAa,EAACM,MAAM,CAACG,OAAO,CAACR,EAAE,CAAC;IAG1D,MAAMJ,GAAG,CAAC;MAACc,IAAI,EAAGb,cAAc,CAACc,iBAAiB;MAAEH,OAAO,EAAGC;IAAM,CAAC,CAAC;EAE1E,CAAC,CACD,OAAMN,GAAG,EAAE;IAEP,MAAMP,GAAG,CAAC;MAACc,IAAI,EAAGb,cAAc,CAACe;IAAc,CAAC,CAAC;EACrD;AACJ;AACC,UAAUC,iBAAiBA,CAAA,EAAG;EAE3B,MAAMnB,SAAS,CAACG,cAAc,CAACiB,iBAAiB,EAACV,gBAAgB,CAAC;AAEtE;AAEA,OAAO,MAAMW,aAAa,GAAGF,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}