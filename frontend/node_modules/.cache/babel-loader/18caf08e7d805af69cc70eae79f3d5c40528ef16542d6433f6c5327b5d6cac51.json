{"ast":null,"code":"import _regeneratorRuntime from\"/home/aniketkumar/KB/projectMnagementSystem/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/aniketkumar/KB/projectMnagementSystem/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _marked=/*#__PURE__*/_regeneratorRuntime().mark(workupdateadminSaga),_marked2=/*#__PURE__*/_regeneratorRuntime().mark(watchupdateadminSaga);import{takeEvery,call,put}from'redux-saga/effects';//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\nimport{userActionType}from'../state/action-types';//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n//import { userLoginSuccessAction } from '../state/action-creators';\nimport axios from'axios';var addUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id){var config,_yield$axios$post,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;config={headers:{'Content-Type':'application/json'}};_context.next=4;return axios.post(\"/user/update/\".concat(id),config);case 4:_yield$axios$post=_context.sent;data=_yield$axios$post.data;return _context.abrupt(\"return\",data);case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);throw _context.t0;case 12:case\"end\":return _context.stop();}},_callee,null,[[0,9]]);}));return function addUser(_x){return _ref.apply(this,arguments);};}();/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/function workupdateadminSaga(action){var result;return _regeneratorRuntime().wrap(function workupdateadminSaga$(_context2){while(1)switch(_context2.prev=_context2.next){case 0://yield takeEvery\nconsole.log(\"work update admin saga working\");_context2.prev=1;_context2.next=4;return call(addUser,action.payload.id);case 4:result=_context2.sent;console.log(result);// way of calling action from work saga\n_context2.next=8;return put({type:userActionType.USER_UPATE_ADMIN_SUCCESS});case 8:_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);_context2.next=14;return put({type:userActionType.USER_INFO_FAIL});case 14:case\"end\":return _context2.stop();}},_marked,null,[[1,10]]);}function watchupdateadminSaga(){return _regeneratorRuntime().wrap(function watchupdateadminSaga$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:console.log(\"watch add user saga\");_context3.next=3;return takeEvery(userActionType.USER_UPDATE_ADMIN_REQUEST,workupdateadminSaga);case 3:case\"end\":return _context3.stop();}},_marked2);}export var updateAdminSaga=watchupdateadminSaga;","map":{"version":3,"names":["workupdateadminSaga","_marked2","_regeneratorRuntime","mark","watchupdateadminSaga","takeEvery","call","put","userActionType","axios","addUser","_ref","_asyncToGenerator","_callee","id","config","_yield$axios$post","data","wrap","_callee$","_context","prev","next","headers","post","concat","sent","abrupt","t0","stop","_x","apply","arguments","action","result","workupdateadminSaga$","_context2","console","log","payload","type","USER_UPATE_ADMIN_SUCCESS","USER_INFO_FAIL","_marked","watchupdateadminSaga$","_context3","USER_UPDATE_ADMIN_REQUEST","updateAdminSaga"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/updateAdminSaga.ts"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { userLoginRequestAction, userSignupFailAction, userUpdateAdminActionFail, userUpdateAdminActionSuccess } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst addUser  = async (id : string) => {\n\n    //console.log(email,password)\n\n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n    \n        const { data } = await axios.post(`/user/update/${id}`,config)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workupdateadminSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"work update admin saga working\")\n\n    try {\n\n        //action.payload.email\n        const result = yield call(addUser,action.payload.id);\n\n        console.log(result)\n\n        // way of calling action from work saga\n        \n        yield put({type : userActionType.USER_UPATE_ADMIN_SUCCESS})\n\n    \n\n    }\n    catch(err) {\n\n        yield put({type : userActionType.USER_INFO_FAIL})\n    }\n}\n function* watchupdateadminSaga() {\n\n    console.log(\"watch add user saga\")\n    yield takeEvery(userActionType.USER_UPDATE_ADMIN_REQUEST,workupdateadminSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const updateAdminSaga = watchupdateadminSaga"],"mappings":"wVA0EUA,mBAAmB,EAAAC,QAAA,cAAAC,mBAAA,GAAAC,IAAA,CAyBlBC,oBAAoB,EAtF/B,OAASC,SAAS,CAAiBC,IAAI,CAACC,GAAG,KAAc,oBAAoB,CAE7E;AAEA,OAASC,cAAc,KAAQ,uBAAuB,CAEtD;AAEA;AAEA,MAAO,CAAAC,KAAK,KAAM,OAAO,CAUzB,GAAM,CAAAC,OAAO,6BAAAC,IAAA,CAAAC,iBAAA,cAAAV,mBAAA,GAAAC,IAAA,CAAI,SAAAU,QAAOC,EAAW,MAAAC,MAAA,CAAAC,iBAAA,CAAAC,IAAA,QAAAf,mBAAA,GAAAgB,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAMrBN,MAAM,CAAG,CACXQ,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAAH,QAAA,CAAAE,IAAA,SAEsB,CAAAb,KAAK,CAACe,IAAI,iBAAAC,MAAA,CAAiBX,EAAE,EAAGC,MAAM,CAAC,QAAAC,iBAAA,CAAAI,QAAA,CAAAM,IAAA,CAAtDT,IAAI,CAAAD,iBAAA,CAAJC,IAAI,QAAAG,QAAA,CAAAO,MAAA,UAELV,IAAI,SAAAG,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAQ,EAAA,CAAAR,QAAA,mBAAAA,QAAA,CAAAQ,EAAA,0BAAAR,QAAA,CAAAS,IAAA,MAAAhB,OAAA,gBAWlB,kBAzBK,CAAAH,OAAOA,CAAAoB,EAAA,SAAAnB,IAAA,CAAAoB,KAAA,MAAAC,SAAA,OAyBZ,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAKA,QAAU,CAAAhC,mBAAmBA,CAACiC,MAAc,MAAAC,MAAA,QAAAhC,mBAAA,GAAAgB,IAAA,UAAAiB,qBAAAC,SAAA,iBAAAA,SAAA,CAAAf,IAAA,CAAAe,SAAA,CAAAd,IAAA,SAExC;AAEAe,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAAAF,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA,GAK1B,MAAM,CAAAhB,IAAI,CAACI,OAAO,CAACuB,MAAM,CAACM,OAAO,CAACzB,EAAE,CAAC,QAA9CoB,MAAM,CAAAE,SAAA,CAAAV,IAAA,CAEZW,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC,CAEnB;AAAAE,SAAA,CAAAd,IAAA,GAEA,MAAM,CAAAf,GAAG,CAAC,CAACiC,IAAI,CAAGhC,cAAc,CAACiC,wBAAwB,CAAC,CAAC,QAAAL,SAAA,CAAAd,IAAA,kBAAAc,SAAA,CAAAf,IAAA,IAAAe,SAAA,CAAAR,EAAA,CAAAQ,SAAA,aAAAA,SAAA,CAAAd,IAAA,IAO3D,MAAM,CAAAf,GAAG,CAAC,CAACiC,IAAI,CAAGhC,cAAc,CAACkC,cAAc,CAAC,CAAC,0BAAAN,SAAA,CAAAP,IAAA,MAAAc,OAAA,iBAGxD,QAAU,CAAAvC,oBAAoBA,CAAA,SAAAF,mBAAA,GAAAgB,IAAA,UAAA0B,sBAAAC,SAAA,iBAAAA,SAAA,CAAAxB,IAAA,CAAAwB,SAAA,CAAAvB,IAAA,SAE3Be,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAAAO,SAAA,CAAAvB,IAAA,GAClC,MAAM,CAAAjB,SAAS,CAACG,cAAc,CAACsC,yBAAyB,CAAC9C,mBAAmB,CAAC,yBAAA6C,SAAA,CAAAhB,IAAA,MAAA5B,QAAA,GAMjF,MAAO,IAAM,CAAA8C,eAAe,CAAG3C,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}