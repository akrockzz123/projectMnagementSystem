{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nconst fetchCourses = async id => {\n  // console.log(email,password)\n\n  try {\n    const {\n      data\n    } = await axios.get(`/userp/${id}`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\nfunction* workuserCourseSaga(action) {\n  //yield takeEvery\n\n  console.log(\"worksaga usercourses working\");\n  try {\n    //action.payload.email\n\n    //console.log(action.payload.user,action.payload.pass)\n\n    console.log(action.payload.id);\n    const result = yield call(fetchCourses, action.payload.id);\n    console.log(result);\n\n    // way of calling action from work saga\n\n    yield put({\n      type: userActionType.GET_PROJECTS_OF_USER_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: userActionType.GET_PROJECTS_OF_USER_FAIL\n    });\n  }\n}\nfunction* watchuserCoursesSaga() {\n  console.log(\"watch user course saga\");\n  yield takeEvery(userActionType.GET_PROJECTS_OF_USER_REQUEST, workuserCourseSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const userCoursesSagas = watchuserCoursesSaga;","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","fetchCourses","id","data","get","err","workuserCourseSaga","action","console","log","payload","result","type","GET_PROJECTS_OF_USER_SUCCESS","GET_PROJECTS_OF_USER_FAIL","watchuserCoursesSaga","GET_PROJECTS_OF_USER_REQUEST","userCoursesSagas"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/useCoursesSaga.ts"],"sourcesContent":["\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { userLoginRequestAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst fetchCourses  = async (id : string) => {\n\n   // console.log(email,password)\n\n    try {\n        \n       \n        \n    \n        const { data } = await axios.get(`/userp/${id}`)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workuserCourseSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"worksaga usercourses working\")\n\n    try {\n\n        //action.payload.email\n\n        //console.log(action.payload.user,action.payload.pass)\n\n        console.log(action.payload.id,)\n        const result = yield call(fetchCourses,action.payload.id);\n\n        console.log(result)\n\n        // way of calling action from work saga\n        \n        yield put({type : userActionType.GET_PROJECTS_OF_USER_SUCCESS, payload : result})\n\n    \n\n    }\n    catch(err) {\n\n        yield put({type : userActionType.GET_PROJECTS_OF_USER_FAIL})\n    }\n}\n function* watchuserCoursesSaga() {\n\n    console.log(\"watch user course saga\")\n    yield takeEvery(userActionType.GET_PROJECTS_OF_USER_REQUEST,workuserCourseSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const userCoursesSagas = watchuserCoursesSaga;"],"mappings":"AAKA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAUzB,MAAMC,YAAY,GAAI,MAAOC,EAAW,IAAK;EAE1C;;EAEC,IAAI;IAKA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,UAASF,EAAG,EAAC,CAAC;IAEhD,OAAOC,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAUC,kBAAkBA,CAACC,MAAc,EAAO;EAE9C;;EAEAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAE3C,IAAI;IAEA;;IAEA;;IAEAD,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAACR,EAAE,CAAE;IAC/B,MAAMS,MAAM,GAAG,MAAMd,IAAI,CAACI,YAAY,EAACM,MAAM,CAACG,OAAO,CAACR,EAAE,CAAC;IAEzDM,OAAO,CAACC,GAAG,CAACE,MAAM,CAAC;;IAEnB;;IAEA,MAAMb,GAAG,CAAC;MAACc,IAAI,EAAGb,cAAc,CAACc,4BAA4B;MAAEH,OAAO,EAAGC;IAAM,CAAC,CAAC;EAIrF,CAAC,CACD,OAAMN,GAAG,EAAE;IAEP,MAAMP,GAAG,CAAC;MAACc,IAAI,EAAGb,cAAc,CAACe;IAAyB,CAAC,CAAC;EAChE;AACJ;AACC,UAAUC,oBAAoBA,CAAA,EAAG;EAE9BP,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,MAAMb,SAAS,CAACG,cAAc,CAACiB,4BAA4B,EAACV,kBAAkB,CAAC;;EAE/E;AAEJ;;AAEA,OAAO,MAAMW,gBAAgB,GAAGF,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}