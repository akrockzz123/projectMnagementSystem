{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { userSignupFailAction } from '../state/action-creators';\nconst addUser = async (username, email, password, role) => {\n  console.log(email, password);\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const status = \"Inactive\";\n    const {\n      data\n    } = await axios.post('/user/add', {\n      username,\n      email,\n      role,\n      status,\n      password\n    }, config);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\nfunction* workadduserSaga(action) {\n  //yield takeEvery\n\n  console.log(\"work add user saga working\");\n  try {\n    //action.payload.email\n    const result = yield call(addUser, action.payload.username, action.payload.email, action.payload.password, action.payload.role);\n    console.log(result);\n\n    // way of calling action from work saga\n\n    // yield put(userSignupSuccessAction)\n\n    yield put({\n      type: userActionType.USER_SIGNUP_SUCCESS\n    });\n    yield put({\n      type: userActionType.USER_SIGNUP_\n    });\n  } catch (err) {\n    yield put(userSignupFailAction);\n  }\n}\nfunction* watchadduserSaga() {\n  console.log(\"watch add user saga\");\n  yield takeEvery(userActionType.USER_SIGNUP_REQUEST, workadduserSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const AdduserSaga = watchadduserSaga;","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","userSignupFailAction","addUser","username","email","password","role","console","log","config","headers","status","data","post","err","workadduserSaga","action","result","payload","type","USER_SIGNUP_SUCCESS","USER_SIGNUP_","watchadduserSaga","USER_SIGNUP_REQUEST","AdduserSaga"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/addUserSaga.ts"],"sourcesContent":["\n\n\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { userLoginRequestAction, userSignupFailAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst addUser  = async (username : string,email: string,password: string,role : string) => {\n\n    console.log(email,password)\n\n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n\n        const status : string = \"Inactive\"\n\n        const { data } = await axios.post('/user/add',{username,email,role,status,password},config)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workadduserSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"work add user saga working\")\n\n    try {\n\n        //action.payload.email\n        const result = yield call(addUser,action.payload.username,action.payload.email,action.payload.password,action.payload.role);\n\n        console.log(result)\n\n        // way of calling action from work saga\n        \n       // yield put(userSignupSuccessAction)\n\n       yield put({\n                \n        type: userActionType.USER_SIGNUP_SUCCESS\n    })\n\n    yield put({\n                \n        type: userActionType.USER_SIGNUP_\n    })\n    \n    \n\n    }\n    catch(err) {\n\n        yield put(userSignupFailAction)\n    }\n}\n function* watchadduserSaga() {\n\n    console.log(\"watch add user saga\")\n    yield takeEvery(userActionType.USER_SIGNUP_REQUEST,workadduserSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const AdduserSaga = watchadduserSaga;\n\n\n"],"mappings":"AAOA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAAiCC,oBAAoB,QAAQ,0BAA0B;AAOvF,MAAMC,OAAO,GAAI,MAAAA,CAAOC,QAAiB,EAACC,KAAa,EAACC,QAAgB,EAACC,IAAa,KAAK;EAEvFC,OAAO,CAACC,GAAG,CAACJ,KAAK,EAACC,QAAQ,CAAC;EAE3B,IAAI;IAEA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAMC,MAAe,GAAG,UAAU;IAElC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,WAAW,EAAC;MAACV,QAAQ;MAACC,KAAK;MAACE,IAAI;MAACK,MAAM;MAACN;IAAQ,CAAC,EAACI,MAAM,CAAC;IAE3F,OAAOG,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAUC,eAAeA,CAACC,MAAc,EAAO;EAE3C;;EAEAT,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAEzC,IAAI;IAEA;IACA,MAAMS,MAAM,GAAG,MAAMpB,IAAI,CAACK,OAAO,EAACc,MAAM,CAACE,OAAO,CAACf,QAAQ,EAACa,MAAM,CAACE,OAAO,CAACd,KAAK,EAACY,MAAM,CAACE,OAAO,CAACb,QAAQ,EAACW,MAAM,CAACE,OAAO,CAACZ,IAAI,CAAC;IAE3HC,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;;IAEnB;;IAED;;IAEA,MAAMnB,GAAG,CAAC;MAETqB,IAAI,EAAEpB,cAAc,CAACqB;IACzB,CAAC,CAAC;IAEF,MAAMtB,GAAG,CAAC;MAENqB,IAAI,EAAEpB,cAAc,CAACsB;IACzB,CAAC,CAAC;EAIF,CAAC,CACD,OAAMP,GAAG,EAAE;IAEP,MAAMhB,GAAG,CAACG,oBAAoB,CAAC;EACnC;AACJ;AACC,UAAUqB,gBAAgBA,CAAA,EAAG;EAE1Bf,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,MAAMZ,SAAS,CAACG,cAAc,CAACwB,mBAAmB,EAACR,eAAe,CAAC;;EAEnE;AAEJ;;AAEA,OAAO,MAAMS,WAAW,GAAGF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}