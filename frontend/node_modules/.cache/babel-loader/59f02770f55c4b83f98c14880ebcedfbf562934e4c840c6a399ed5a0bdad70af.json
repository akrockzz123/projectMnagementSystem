{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { UsersListSuccessAction } from '../state/action-creators';\nimport { userLoginFailAction } from '../state/action-creators';\nconst fetchUserList = async () => {\n  //c//onsole.log(email,password)\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get('/user/all');\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\nfunction* workListUserSaga(action) {\n  //yield takeEvery\n\n  console.log(\"worksaga working\");\n  try {\n    //action.payload.email\n    const result = yield call(fetchUserList);\n    console.log(result);\n\n    // way of calling action from work saga\n\n    yield put(UsersListSuccessAction(result));\n  } catch (err) {\n    yield put(userLoginFailAction());\n  }\n}\nfunction* watchListUserSaga() {\n  console.log(\"watch saga users list\");\n  yield takeEvery(userActionType.USERS_LIST_REQUEST, workListUserSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const userListsSagas = watchListUserSaga;","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","UsersListSuccessAction","userLoginFailAction","fetchUserList","config","headers","data","get","err","workListUserSaga","action","console","log","result","watchListUserSaga","USERS_LIST_REQUEST","userListsSagas"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/usersListSaga.ts"],"sourcesContent":["\n\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { userLoginRequestAction, UsersListSuccessAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst fetchUserList  = async () => {\n\n    //c//onsole.log(email,password)\n\n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n    \n        const { data } = await axios.get('/user/all')\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workListUserSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"worksaga working\")\n\n    try {\n\n        //action.payload.email\n        const result = yield call(fetchUserList);\n\n        console.log(result)\n\n        // way of calling action from work saga\n        \n        yield put(UsersListSuccessAction(result))\n\n    \n\n    }\n    catch(err) {\n\n        yield put(userLoginFailAction())\n    }\n}\n function* watchListUserSaga() {\n\n    console.log(\"watch saga users list\")\n    yield takeEvery(userActionType.USERS_LIST_REQUEST,workListUserSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const userListsSagas = watchListUserSaga;"],"mappings":"AAMA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAAiCC,sBAAsB,QAAQ,0BAA0B;AAEzF,SAASC,mBAAmB,QAAQ,0BAA0B;AAK9D,MAAMC,aAAa,GAAI,MAAAA,CAAA,KAAY;EAE/B;;EAEA,IAAI;IAEA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,WAAW,CAAC;IAE7C,OAAOD,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAUC,gBAAgBA,CAACC,MAAc,EAAO;EAE5C;;EAEAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAE/B,IAAI;IAEA;IACA,MAAMC,MAAM,GAAG,MAAMhB,IAAI,CAACM,aAAa,CAAC;IAExCQ,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;;IAEnB;;IAEA,MAAMf,GAAG,CAACG,sBAAsB,CAACY,MAAM,CAAC,CAAC;EAI7C,CAAC,CACD,OAAML,GAAG,EAAE;IAEP,MAAMV,GAAG,CAACI,mBAAmB,EAAE,CAAC;EACpC;AACJ;AACC,UAAUY,iBAAiBA,CAAA,EAAG;EAE3BH,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,MAAMhB,SAAS,CAACG,cAAc,CAACgB,kBAAkB,EAACN,gBAAgB,CAAC;;EAEnE;AAEJ;;AAEA,OAAO,MAAMO,cAAc,GAAGF,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}