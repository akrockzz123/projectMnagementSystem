{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nconst fetchUserinfo = async id => {\n  //console.log(email,password)\n\n  try {\n    // const config = {\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    // }\n\n    // const username : string = email\n\n    //const pass : string = password\n\n    const {\n      data\n    } = await axios.get(`/user/${id}`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\nfunction* workuserinfoSaga(action) {\n  //yield takeEvery\n\n  console.log(\"worksaga working\");\n  try {\n    //action.payload.email\n\n    console.log(action.payload, action.payload.id);\n    const result = yield call(fetchUserinfo, action.payload.id);\n    console.log(result, \"chekcing usernfo saga\");\n\n    // way of calling action from work saga\n\n    yield put({\n      type: userActionType.USER_INFO_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: userActionType.USER_INFO_FAIL\n    });\n  }\n}\nfunction* watchuserinfoSaga() {\n  console.log(\"watch saga\");\n  yield takeEvery(userActionType.USER_INFO_REQUEST, workuserinfoSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const userinfoSagas = watchuserinfoSaga;","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","fetchUserinfo","id","data","get","err","workuserinfoSaga","action","console","log","payload","result","type","USER_INFO_SUCCESS","USER_INFO_FAIL","watchuserinfoSaga","USER_INFO_REQUEST","userinfoSagas"],"sources":["/home/aniketkumar/Desktop/projectMnagementSystem/frontend/src/sagas/getUserSaga.ts"],"sourcesContent":["\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { userinfoSuccess, userLoginRequestAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst fetchUserinfo  = async (id : string) => {\n\n    //console.log(email,password)\n\n    try {\n        \n        // const config = {\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     },\n        // }\n\n       // const username : string = email\n\n        //const pass : string = password\n\n\n        const { data } = await axios.get(`/user/${id}`)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workuserinfoSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"worksaga working\")\n\n    try {\n\n        //action.payload.email\n\n        console.log(action.payload,action.payload.id)\n\n\n        const result = yield call(fetchUserinfo,action.payload.id);\n\n        console.log(result,\"chekcing usernfo saga\")\n\n        // way of calling action from work saga\n        \n        yield put({type : userActionType.USER_INFO_SUCCESS, payload : result})\n        \n\n    \n\n    }\n    catch(err) {\n\n        yield put({type : userActionType.USER_INFO_FAIL})\n    }\n}\n function* watchuserinfoSaga() {\n\n    console.log(\"watch saga\")\n    yield takeEvery(userActionType.USER_INFO_REQUEST,workuserinfoSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const userinfoSagas = watchuserinfoSaga;\n"],"mappings":"AAKA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAUzB,MAAMC,aAAa,GAAI,MAAOC,EAAW,IAAK;EAE1C;;EAEA,IAAI;IAEA;IACA;IACA;IACA;IACA;;IAED;;IAEC;;IAGA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,SAAQF,EAAG,EAAC,CAAC;IAE/C,OAAOC,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAUC,gBAAgBA,CAACC,MAAc,EAAO;EAE5C;;EAEAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAE/B,IAAI;IAEA;;IAEAD,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,EAACH,MAAM,CAACG,OAAO,CAACR,EAAE,CAAC;IAG7C,MAAMS,MAAM,GAAG,MAAMd,IAAI,CAACI,aAAa,EAACM,MAAM,CAACG,OAAO,CAACR,EAAE,CAAC;IAE1DM,OAAO,CAACC,GAAG,CAACE,MAAM,EAAC,uBAAuB,CAAC;;IAE3C;;IAEA,MAAMb,GAAG,CAAC;MAACc,IAAI,EAAGb,cAAc,CAACc,iBAAiB;MAAEH,OAAO,EAAGC;IAAM,CAAC,CAAC;EAK1E,CAAC,CACD,OAAMN,GAAG,EAAE;IAEP,MAAMP,GAAG,CAAC;MAACc,IAAI,EAAGb,cAAc,CAACe;IAAc,CAAC,CAAC;EACrD;AACJ;AACC,UAAUC,iBAAiBA,CAAA,EAAG;EAE3BP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzB,MAAMb,SAAS,CAACG,cAAc,CAACiB,iBAAiB,EAACV,gBAAgB,CAAC;;EAElE;AAEJ;;AAEA,OAAO,MAAMW,aAAa,GAAGF,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}