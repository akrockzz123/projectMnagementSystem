{"ast":null,"code":"import _slicedToArray from\"/home/aniketkumar/KB/projectMnagementSystem/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useEffect,useState}from'react';import{Alert}from'react-bootstrap';import{useAppSelector}from'../Types';import{jsx as _jsx}from\"react/jsx-runtime\";var Alerts=function Alerts(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messg=_useState2[0],setMessg=_useState2[1];var alertData=useAppSelector(function(state){return state.alertReducer;});console.log(alertData);useEffect(function(){if(alertData!==null&&alertData.length!==null){// setMessg(alertData)\n}},[alertData]);return/*#__PURE__*/_jsx(\"div\",{children:messg.map(function(mess,idx){return/*#__PURE__*/_jsx(Alert,{variant:mess.alertType,children:mess.msg},idx);})});};export default Alerts;","map":{"version":3,"names":["React","useEffect","useState","Alert","useAppSelector","jsx","_jsx","Alerts","_useState","_useState2","_slicedToArray","messg","setMessg","alertData","state","alertReducer","console","log","length","children","map","mess","idx","variant","alertType","msg"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/screen/Alertscreen.tsx"],"sourcesContent":["\n\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { connect } from 'react-redux';\nimport { afterWrite } from '@popperjs/core';\n\nimport { useEffect,useState } from 'react';\n\nimport { Alert } from 'react-bootstrap';\nimport { useAppSelector } from '../Types';\n\ntype _alertData = {\n   msg:string,\n   id:string,\n   alertType : string\n}\n\nconst Alerts : React.FC = () => {\n\n    const [messg , setMessg] = useState([]);\n    const alertData : _alertData[]  = useAppSelector(state => state.alertReducer);\n\n   console.log(alertData)\n\n   useEffect(() => {\n    if(alertData !== null && alertData.length !== null) {\n        // setMessg(alertData)\n    }\n}, [alertData])\n\n   return (\n    <div>\n        { messg.map((mess : _alertData,idx) => (\n                (<Alert key={idx} variant={mess.alertType}>\n                    {mess.msg}             \n                </Alert>\n            )))                         \n    }\n    </div>\n   )\n\n }\n\nexport default Alerts;"],"mappings":"0IAGA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAQzB,OAASC,SAAS,CAACC,QAAQ,KAAQ,OAAO,CAE1C,OAASC,KAAK,KAAQ,iBAAiB,CACvC,OAASC,cAAc,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAQ1C,GAAM,CAAAC,MAAiB,CAAG,QAApB,CAAAA,MAAiBA,CAAA,CAAS,CAE5B,IAAAC,SAAA,CAA2BN,QAAQ,CAAC,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhCG,KAAK,CAAAF,UAAA,IAAGG,QAAQ,CAAAH,UAAA,IACvB,GAAM,CAAAI,SAAwB,CAAIT,cAAc,CAAC,SAAAU,KAAK,QAAI,CAAAA,KAAK,CAACC,YAAY,GAAC,CAE9EC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC,CAEtBZ,SAAS,CAAC,UAAM,CACf,GAAGY,SAAS,GAAK,IAAI,EAAIA,SAAS,CAACK,MAAM,GAAK,IAAI,CAAE,CAChD;AAAA,CAER,CAAC,CAAE,CAACL,SAAS,CAAC,CAAC,CAEZ,mBACCP,IAAA,QAAAa,QAAA,CACMR,KAAK,CAACS,GAAG,CAAC,SAACC,IAAiB,CAACC,GAAG,qBACzBhB,IAAA,CAACH,KAAK,EAAWoB,OAAO,CAAEF,IAAI,CAACG,SAAU,CAAAL,QAAA,CACrCE,IAAI,CAACI,GAAG,EADAH,GAAG,CAER,EACV,CAAC,EAEL,CAGT,CAAC,CAEF,cAAe,CAAAf,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}