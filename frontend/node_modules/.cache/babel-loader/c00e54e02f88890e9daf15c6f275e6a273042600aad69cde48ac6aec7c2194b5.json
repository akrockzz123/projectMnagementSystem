{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nconst fetchUser = async (username, password) => {\n  console.log(email, password);\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/user/login', {\n      username,\n      password\n    }, config);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\nfunction* workuserSaga(action) {\n  //yield takeEvery\n\n  console.log(\"worksaga working\");\n  try {\n    //action.payload.email\n\n    console.log(action.payload.user, action.payload.pass);\n    const result = yield call(fetchUser, action.payload.user, action.payload.pass);\n    console.log(result);\n\n    // way of calling action from work saga\n\n    yield put({\n      type: userActionType.USER_LOGIN_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: userActionType.USER_LOGIN_FAIL\n    });\n  }\n}\nfunction* watchuserSaga() {\n  console.log(\"watch saga\");\n  yield takeEvery(userActionType.USER_LOGIN_REQUEST, workuserSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const userSagas = watchuserSaga;","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","fetchUser","username","password","console","log","email","config","headers","data","post","err","workuserSaga","action","payload","user","pass","result","type","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","watchuserSaga","USER_LOGIN_REQUEST","userSagas"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/userSaga.ts"],"sourcesContent":["\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { userLoginRequestAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst fetchUser  = async (username: string,password: string) => {\n\n    console.log(email,password)\n\n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n\n        \n    \n        const { data } = await axios.post('/user/login',{username,password},config)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workuserSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"worksaga working\")\n\n    try {\n\n        //action.payload.email\n\n        console.log(action.payload.user,action.payload.pass)\n\n\n        const result = yield call(fetchUser,action.payload.user,action.payload.pass);\n\n        console.log(result)\n\n        // way of calling action from work saga\n        \n        yield put({type : userActionType.USER_LOGIN_SUCCESS, payload : result})\n\n    \n\n    }\n    catch(err) {\n\n        yield put({type : userActionType.USER_LOGIN_FAIL})\n    }\n}\n function* watchuserSaga() {\n\n    console.log(\"watch saga\")\n    yield takeEvery(userActionType.USER_LOGIN_REQUEST,workuserSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const userSagas = watchuserSaga;"],"mappings":"AAEA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAUzB,MAAMC,SAAS,GAAI,MAAAA,CAAOC,QAAgB,EAACC,QAAgB,KAAK;EAE5DC,OAAO,CAACC,GAAG,CAACC,KAAK,EAACH,QAAQ,CAAC;EAE3B,IAAI;IAEA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAID,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,aAAa,EAAC;MAACR,QAAQ;MAACC;IAAQ,CAAC,EAACI,MAAM,CAAC;IAE3E,OAAOE,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAUC,YAAYA,CAACC,MAAc,EAAO;EAExC;;EAEAT,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAE/B,IAAI;IAEA;;IAEAD,OAAO,CAACC,GAAG,CAACQ,MAAM,CAACC,OAAO,CAACC,IAAI,EAACF,MAAM,CAACC,OAAO,CAACE,IAAI,CAAC;IAGpD,MAAMC,MAAM,GAAG,MAAMpB,IAAI,CAACI,SAAS,EAACY,MAAM,CAACC,OAAO,CAACC,IAAI,EAACF,MAAM,CAACC,OAAO,CAACE,IAAI,CAAC;IAE5EZ,OAAO,CAACC,GAAG,CAACY,MAAM,CAAC;;IAEnB;;IAEA,MAAMnB,GAAG,CAAC;MAACoB,IAAI,EAAGnB,cAAc,CAACoB,kBAAkB;MAAEL,OAAO,EAAGG;IAAM,CAAC,CAAC;EAI3E,CAAC,CACD,OAAMN,GAAG,EAAE;IAEP,MAAMb,GAAG,CAAC;MAACoB,IAAI,EAAGnB,cAAc,CAACqB;IAAe,CAAC,CAAC;EACtD;AACJ;AACC,UAAUC,aAAaA,CAAA,EAAG;EAEvBjB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzB,MAAMT,SAAS,CAACG,cAAc,CAACuB,kBAAkB,EAACV,YAAY,CAAC;;EAE/D;AAEJ;;AAEA,OAAO,MAAMW,SAAS,GAAGF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}