{"ast":null,"code":"import _regeneratorRuntime from\"/home/sameersuman/KB/new/projectMnagementSystem/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/sameersuman/KB/new/projectMnagementSystem/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _marked=/*#__PURE__*/_regeneratorRuntime().mark(workaddProjectSaga),_marked2=/*#__PURE__*/_regeneratorRuntime().mark(watchaddProjectSaga);import{takeEvery,call,put}from'redux-saga/effects';//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\nimport{courseActionType}from'../state/action-types';//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n//import { userLoginSuccessAction } from '../state/action-creators';\nimport axios from'axios';import{courseAddRequestFail}from'../state/action-creators';var addProject=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(name,assignee_id){var config,status,_yield$axios$post,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(name,assignee_id);_context.prev=1;config={headers:{'Content-Type':'application/json'}};status=\"Inactive\";_context.next=6;return axios.post('/project/add',{name:name,assignee_id:assignee_id,status:status},config);case 6:_yield$axios$post=_context.sent;data=_yield$axios$post.data;return _context.abrupt(\"return\",data);case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);throw _context.t0;case 14:case\"end\":return _context.stop();}},_callee,null,[[1,11]]);}));return function addProject(_x,_x2){return _ref.apply(this,arguments);};}();/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/function workaddProjectSaga(action){var result;return _regeneratorRuntime().wrap(function workaddProjectSaga$(_context2){while(1)switch(_context2.prev=_context2.next){case 0://yield takeEvery\nconsole.log(\"work add user saga working\");_context2.prev=1;_context2.next=4;return call(addProject,action.payload.name,action.payload.assignee_id);case 4:result=_context2.sent;console.log(result);// way of calling action from work saga\n// const dispacth = useDispatch()\n_context2.next=8;return put({type:courseActionType.ADD_PROJECT_SUCCESS});case 8:_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);_context2.next=14;return put(courseAddRequestFail);case 14:case\"end\":return _context2.stop();}},_marked,null,[[1,10]]);}function watchaddProjectSaga(){return _regeneratorRuntime().wrap(function watchaddProjectSaga$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:console.log(\"watch add user saga\");_context3.next=3;return takeEvery(courseActionType.ADD_PROJECT_REQUEST,workaddProjectSaga);case 3:case\"end\":return _context3.stop();}},_marked2);}export var AddprojectSaga=watchaddProjectSaga;","map":{"version":3,"names":["workaddProjectSaga","_marked2","_regeneratorRuntime","mark","watchaddProjectSaga","takeEvery","call","put","courseActionType","axios","courseAddRequestFail","addProject","_ref","_asyncToGenerator","_callee","name","assignee_id","config","status","_yield$axios$post","data","wrap","_callee$","_context","prev","next","console","log","headers","post","sent","abrupt","t0","stop","_x","_x2","apply","arguments","action","result","workaddProjectSaga$","_context2","payload","type","ADD_PROJECT_SUCCESS","_marked","watchaddProjectSaga$","_context3","ADD_PROJECT_REQUEST","AddprojectSaga"],"sources":["/home/sameersuman/KB/new/projectMnagementSystem/frontend/src/sagas/addProjectSaga.ts"],"sourcesContent":["\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { courseActionType, userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { courseAddRequestFail, courseAddRequestSuccess, userLoginRequestAction, userSignupFailAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\nimport { useDispatch } from 'react-redux';\n\n\nconst addProject = async (name : string,assignee_id: string) => {\n\n    console.log(name,assignee_id)\n\n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n\n        const status : string = \"Inactive\"\n        const { data } = await axios.post('/project/add',{name,assignee_id,status},config)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workaddProjectSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"work add user saga working\")\n\n    try {\n\n        //action.payload.email\n        const result = yield call(addProject,action.payload.name,action.payload.assignee_id);\n\n        console.log(result)\n\n        // way of calling action from work saga\n       // const dispacth = useDispatch()\n\n        yield put({type : courseActionType.ADD_PROJECT_SUCCESS})\n\n    \n\n    }\n    catch(err) {\n\n        yield put(courseAddRequestFail)\n    }\n}\n function* watchaddProjectSaga() {\n\n    console.log(\"watch add user saga\")\n    yield takeEvery(courseActionType.ADD_PROJECT_REQUEST,workaddProjectSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const AddprojectSaga = watchaddProjectSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}