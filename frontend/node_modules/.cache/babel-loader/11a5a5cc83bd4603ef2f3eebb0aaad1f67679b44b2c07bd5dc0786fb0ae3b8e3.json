{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { AssignProjectRequestFail, AssignProjectRequestSuccess } from '../state/action-creators';\nconst AssignCourseToUser = async (courseid, userAssignId) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const user_id = parseInt(userAssignId);\n    const project_id = courseid;\n    console.log(user_id, project_id, \"jbvsj\", typeof courseid);\n    console.log(\"called in work before api\");\n    const data = await axios.post('/assign/project', {\n      user_id,\n      project_id\n    }, config);\n    console.log(\"called in work after api call \");\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n_c = AssignCourseToUser;\nfunction* workcourseSaga(action) {\n  //yield takeEvery\n  console.log(action.payload.courseid, action.payload.userid, \"watch course saga\");\n  try {\n    console.log(action.payload.courseid, action.payload.userid, \"watch course saga\");\n    const result = yield call(AssignCourseToUser, action.payload.courseid, action.payload.userid);\n    yield put(AssignProjectRequestSuccess);\n  } catch (err) {\n    yield put(AssignProjectRequestFail);\n  }\n}\nfunction* watchcourseSaga() {\n  console.log(\"watch course saga\");\n  yield takeEvery(userActionType.ASSIGN_PROJECT_REQUEST, workcourseSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const courseSagas = watchcourseSaga;\nvar _c;\n$RefreshReg$(_c, \"AssignCourseToUser\");","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","AssignProjectRequestFail","AssignProjectRequestSuccess","AssignCourseToUser","courseid","userAssignId","config","headers","user_id","parseInt","project_id","console","log","data","post","err","_c","workcourseSaga","action","payload","userid","result","watchcourseSaga","ASSIGN_PROJECT_REQUEST","courseSagas","$RefreshReg$"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/courseSaga.ts"],"sourcesContent":["\n\n\n\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { courseActionType, userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { AssignProjectRequestFail, AssignProjectRequestSuccess, userLoginRequestAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst AssignCourseToUser  = async (courseid: string,userAssignId: string) => {\n\n   \n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n\n        const user_id = parseInt(userAssignId)\n\n        const project_id = courseid\n\n        console.log(user_id,project_id,\"jbvsj\",typeof(courseid))\n\n        console.log(\"called in work before api\")\n        const data  = await axios.post('/assign/project',{user_id,project_id},config)\n\n        console.log(\"called in work after api call \")\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workcourseSaga(action: Action) : any{\n\n    //yield takeEvery\n    console.log(action.payload.courseid,action.payload.userid,\"watch course saga\")\n\n    try {\n\n        console.log(action.payload.courseid,action.payload.userid,\"watch course saga\")\n        const result = yield call(AssignCourseToUser,action.payload.courseid,action.payload.userid);\n\n        \n        yield put(AssignProjectRequestSuccess)\n\n    \n\n    }\n    catch(err) {\n\n        yield put(AssignProjectRequestFail)\n    }\n}\n function* watchcourseSaga():any {\n\n    console.log(\"watch course saga\")\n    yield takeEvery(userActionType.ASSIGN_PROJECT_REQUEST,workcourseSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const courseSagas = watchcourseSaga;"],"mappings":"AAKA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAA2BC,cAAc,QAAQ,uBAAuB;;AAExE;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,wBAAwB,EAAEC,2BAA2B,QAAgC,0BAA0B;AAOxH,MAAMC,kBAAkB,GAAI,MAAAA,CAAOC,QAAgB,EAACC,YAAoB,KAAK;EAGzE,IAAI;IAEA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAMC,OAAO,GAAGC,QAAQ,CAACJ,YAAY,CAAC;IAEtC,MAAMK,UAAU,GAAGN,QAAQ;IAE3BO,OAAO,CAACC,GAAG,CAACJ,OAAO,EAACE,UAAU,EAAC,OAAO,EAAC,OAAON,QAAS,CAAC;IAExDO,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,MAAMC,IAAI,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,iBAAiB,EAAC;MAACN,OAAO;MAACE;IAAU,CAAC,EAACJ,MAAM,CAAC;IAE7EK,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAE7C,OAAOC,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVAC,EAAA,GAlCMb,kBAAkB;AAiDxB,UAAUc,cAAcA,CAACC,MAAc,EAAO;EAE1C;EACAP,OAAO,CAACC,GAAG,CAACM,MAAM,CAACC,OAAO,CAACf,QAAQ,EAACc,MAAM,CAACC,OAAO,CAACC,MAAM,EAAC,mBAAmB,CAAC;EAE9E,IAAI;IAEAT,OAAO,CAACC,GAAG,CAACM,MAAM,CAACC,OAAO,CAACf,QAAQ,EAACc,MAAM,CAACC,OAAO,CAACC,MAAM,EAAC,mBAAmB,CAAC;IAC9E,MAAMC,MAAM,GAAG,MAAMxB,IAAI,CAACM,kBAAkB,EAACe,MAAM,CAACC,OAAO,CAACf,QAAQ,EAACc,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC;IAG3F,MAAMtB,GAAG,CAACI,2BAA2B,CAAC;EAI1C,CAAC,CACD,OAAMa,GAAG,EAAE;IAEP,MAAMjB,GAAG,CAACG,wBAAwB,CAAC;EACvC;AACJ;AACC,UAAUqB,eAAeA,CAAA,EAAO;EAE7BX,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAChC,MAAMhB,SAAS,CAACG,cAAc,CAACwB,sBAAsB,EAACN,cAAc,CAAC;;EAErE;AAEJ;;AAEA,OAAO,MAAMO,WAAW,GAAGF,eAAe;AAAC,IAAAN,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}