{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { userLoginFailAction } from '../state/action-creators';\nimport { userLoginSuccessAction } from '../state/action-creators';\nconst fetchUser = async (email, password) => {\n  console.log(email, password);\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const username = email;\n    const pass = password;\n    const {\n      data\n    } = await axios.post('/user/login', {\n      username,\n      pass\n    }, config);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\nfunction* workuserSaga(action) {\n  //yield takeEvery\n\n  console.log(\"worksaga working\");\n  try {\n    //action.payload.email\n\n    console.log(action.payload.email, action.payload.password);\n    const result = yield call(fetchUser, action.payload.email, action.payload.password);\n    console.log(result);\n\n    // way of calling action from work saga\n\n    yield put(userLoginSuccessAction(result));\n  } catch (err) {\n    yield put(userLoginFailAction());\n  }\n}\nfunction* watchuserSaga() {\n  console.log(\"watch saga\");\n  yield takeEvery(userActionType.USER_LOGIN_REQUEST, workuserSaga);\n\n  //yield call(handleLoginAction);\n}\n\nexport const userSagas = watchuserSaga;","map":{"version":3,"names":["takeEvery","call","put","userActionType","axios","userLoginFailAction","userLoginSuccessAction","fetchUser","email","password","console","log","config","headers","username","pass","data","post","err","workuserSaga","action","payload","result","watchuserSaga","USER_LOGIN_REQUEST","userSagas"],"sources":["/home/aniketkumar/KB/projectMnagementSystem/frontend/src/sagas/userSaga.ts"],"sourcesContent":["\n\nimport { takeEvery, take , select, call,put, fork} from  'redux-saga/effects';\n\n//import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from '../constants';\n\nimport { userActionType } from '../state/action-types';\n\n//import { userLoginRequest,userLoginSuccess } from '../action/userLoginAction';\n\n//import { userLoginSuccessAction } from '../state/action-creators';\n\nimport axios from 'axios';\nimport { Action } from '../state/action';\n\nimport { userLoginRequestAction } from '../state/action-creators';\n\nimport { userLoginFailAction } from '../state/action-creators';\n\nimport { userLoginSuccessAction } from '../state/action-creators';\n\n\nconst fetchUser  = async (email: string,password: string) => {\n\n    console.log(email,password)\n\n    try {\n        \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n\n        const username : string = email\n\n        const pass : string = password\n    \n        const { data } = await axios.post('/user/login',{username,pass},config)\n\n        return data\n\n    } catch (err) {\n        \n        throw err\n    }\n    \n\n\n\n\n}\n/*function* handleLoginAction(action: Action) {\n    try {\n\n       const data = yield call(fetchUser);\n\n        \n    } catch(error) {\n\n    }\n\n}*/\n\n\n\n\nfunction* workuserSaga(action: Action) : any{\n\n    //yield takeEvery\n\n    console.log(\"worksaga working\")\n\n    try {\n\n        //action.payload.email\n\n        console.log(action.payload.email,action.payload.password)\n\n\n        const result = yield call(fetchUser,action.payload.email,action.payload.password);\n\n        console.log(result)\n\n        // way of calling action from work saga\n        \n        yield put(userLoginSuccessAction(result))\n\n    \n\n    }\n    catch(err) {\n\n        yield put(userLoginFailAction())\n    }\n}\n function* watchuserSaga() {\n\n    console.log(\"watch saga\")\n    yield takeEvery(userActionType.USER_LOGIN_REQUEST,workuserSaga);\n\n    //yield call(handleLoginAction);\n\n}\n\nexport const userSagas = watchuserSaga;"],"mappings":"AAEA,SAASA,SAAS,EAAiBC,IAAI,EAACC,GAAG,QAAc,oBAAoB;;AAE7E;;AAEA,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAKzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,sBAAsB,QAAQ,0BAA0B;AAGjE,MAAMC,SAAS,GAAI,MAAAA,CAAOC,KAAa,EAACC,QAAgB,KAAK;EAEzDC,OAAO,CAACC,GAAG,CAACH,KAAK,EAACC,QAAQ,CAAC;EAE3B,IAAI;IAEA,MAAMG,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAMC,QAAiB,GAAGN,KAAK;IAE/B,MAAMO,IAAa,GAAGN,QAAQ;IAE9B,MAAM;MAAEO;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,aAAa,EAAC;MAACH,QAAQ;MAACC;IAAI,CAAC,EAACH,MAAM,CAAC;IAEvE,OAAOI,IAAI;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IAEV,MAAMA,GAAG;EACb;AAMJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAUC,YAAYA,CAACC,MAAc,EAAO;EAExC;;EAEAV,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAE/B,IAAI;IAEA;;IAEAD,OAAO,CAACC,GAAG,CAACS,MAAM,CAACC,OAAO,CAACb,KAAK,EAACY,MAAM,CAACC,OAAO,CAACZ,QAAQ,CAAC;IAGzD,MAAMa,MAAM,GAAG,MAAMrB,IAAI,CAACM,SAAS,EAACa,MAAM,CAACC,OAAO,CAACb,KAAK,EAACY,MAAM,CAACC,OAAO,CAACZ,QAAQ,CAAC;IAEjFC,OAAO,CAACC,GAAG,CAACW,MAAM,CAAC;;IAEnB;;IAEA,MAAMpB,GAAG,CAACI,sBAAsB,CAACgB,MAAM,CAAC,CAAC;EAI7C,CAAC,CACD,OAAMJ,GAAG,EAAE;IAEP,MAAMhB,GAAG,CAACG,mBAAmB,EAAE,CAAC;EACpC;AACJ;AACC,UAAUkB,aAAaA,CAAA,EAAG;EAEvBb,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzB,MAAMX,SAAS,CAACG,cAAc,CAACqB,kBAAkB,EAACL,YAAY,CAAC;;EAE/D;AAEJ;;AAEA,OAAO,MAAMM,SAAS,GAAGF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}